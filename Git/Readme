Git Homework
JSON
 4. Создать внешний репозиторий c названием JSON. 
Create a new repository JSON
 5. Клонировать репозиторий JSON на локальный компьютер. 
git clone https://github.com/olejniktut/QA_Course.git
 6. Внутри локального JSON создать файл “new.json”. 
$ touch new.json
 7. Добавить файл под гит. 
$ git add new.json
 8. Закоммитить файл. 
$ git commit -m "new-json"
 9. Отправить файл на внешний GitHub репозиторий.
$ git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
$ nano new.json cntr(o,x)
 11. Отправить изменения на внешний репозиторий.
$ git add new.json
$ git commit -m "change new-json"
$ git push
 12. Создать файл preferences.json
$ touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
$ nano preferences.json cntr(o,x)
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
$ touch skills.json
$ nano skills.json
 15. Отправить сразу 2 файла на внешний репозиторий.
$ git add *
$ git commit -m "change preferences skill "
$ git push
 16. На веб интерфейсе создать файл bug_report.json.
Add file - Create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit new file: "bug_report.json."
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes: "change bug_report"
 20. Синхронизировать внешний и локальный репозиторий JSON
 $ git pull

XML
 21. Создать внешний репозиторий c названием XML.
Create a new repository XML 
 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/olejniktut/QA_Course.git
 23. Внутри локального XML создать файл “new.xml”.
$ touch new.xml
 24. Добавить файл под гит.
git add new.xml
 25. Закоммитить файл.
git commit -m "new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
$ git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
$ nano new.xml cntr(o,x)
 28. Отправить изменения на внешний репозиторий.
$ git add new.xml 
$ git commit -m "change "new.xml"
$ git push
 29. Создать файл preferences.xml
$ touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
$ nano preferences.xml cntr(o,x)
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
$ touch skills.xml
$ nano skills.xml
 32. Сделать коммит в одну строку.
$ git add *
$ git commit -am "create 2 files"
 33. Отправить сразу 2 файла на внешний репозиторий.
$ git push
 34. На веб интерфейсе создать файл bug_report.xml.
Add file - Create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit new file: "bug_report.xml."
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Edit this file
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes: "change bug_report"
 38. Синхронизировать внешний и локальный репозиторий XML
 $ git pull
 
 TXT
 1. Создать внешний репозиторий c названием TXT.
Create a new repository TXT
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/olejniktut/QA_Course.git
 3. Внутри локального TXT создать файл “new.txt”.
$ touch new.txt
 4. Добавить файл под гит.
$ git add new.txt
 5. Закоммитить файл.
$ git commit -m "new-txt"
 6. Отправить файл на внешний GitHub репозиторий.
$ git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
$ nano new.txt cntr(o,x)
 8. Отправить изменения на внешний репозиторий.
$ git add new.txt
$ git commit -m "change new-json"
$ git push
 9. Создать файл preferences.txt
$ touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
$ nano preferences.txt cntr(o,x)
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
$ touch skills.txt
$ nano skills.txt
 12. Сделать коммит в одну строку.
$ git add *
$ git commit -am "create 2 files"
 13. Отправить сразу 2 файла на внешний репозиторий.
$ git push
 14. На веб интерфейсе создать файл bug_report.txt.
Add file - Create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Commit new file: "bug_report.txt."
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Edit this file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes: "change bug_report"
 18. Синхронизировать внешний и локальный репозиторий TXT
 $ git pull
