{
	"info": {
		"_postman_id": "ad5dd222-9b21-4349-8ef0-a90952c31f07",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "task_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"status 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response text\", () => {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"    pm.expect(responseBody).to.include(\"This is the first responce from server!\");\r",
							"   \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "task_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"var param = pm.response.json();\r",
							"pm.test(\"conformity test \", () => {\r",
							"        pm.expect(param.name).to.include(\"zheka\");\r",
							"        pm.expect(param.age).to.include(\"23\");\r",
							"        pm.expect(param.salary).to.eql(1000)\r",
							"});\r",
							"var param_pars = pm.request.body.formdata.toJSON();\r",
							"var bablo = +param_pars[2].value;\r",
							"pm.test(\"conformity test with request \", () => {\r",
							"        pm.expect(param.name).to.eql(param_pars[0].value);\r",
							"        pm.expect(param.age).to.eql(param_pars[1].value);\r",
							"        pm.expect(param.salary).to.eql(bablo);\r",
							"});\r",
							"console.log(param.family);\r",
							"\r",
							"pm.test(\"test salary from family\", () => {\r",
							"    pm.expect(param.family.u_salary_1_5_year).to.eql(bablo*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "zheka",
							"type": "text"
						},
						{
							"key": "age",
							"value": "23",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "task_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"var param = pm.response.json();\r",
							"var param_pars = pm.request.toJSON().url.query;\r",
							"var bablo = +param_pars[2].value;\r",
							"pm.test(\"conformity test\"), () => {\r",
							"    pm.expect(param.name).to.eql(param_pars[0].value);\r",
							"    pm.expect(param.age).to.eql(param_pars[1].value);\r",
							"    pm.expect(param.salary).to.eql(bablo);\r",
							"}\r",
							"console.log(param.family);\r",
							"pm.test(\"dogs name\", () => {\r",
							"    pm.expect(param.family.pets.dog).to.have.property(\"name\");\r",
							"    pm.expect(param.family.pets.dog).to.have.property(\"age\");\r",
							"    pm.expect(param.family.pets.dog.name).to.include(\"Luky\");\r",
							"    pm.expect(param.family.pets.dog.age).to.eql(4);\r",
							"})\r",
							"console.log(param_pars)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=zheka&age=23&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "zheka"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "task_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"var param = pm.response.json();\r",
							"var param_pars = pm.request.toJSON().url.query;\r",
							"var my_age = +param_pars[1].value;\r",
							"pm.test(\"conformity test\", () => {\r",
							"    pm.expect(param.name).to.eql(param_pars[0].value);\r",
							"    pm.expect(param.age).to.eql(my_age);   \r",
							"});\r",
							"console.log(\"request\"+\" \"+param_pars[2].value);\r",
							"console.log(\"response\"+\" \"+param.salary);\r",
							"console.log(param.salary[0]);\r",
							"console.log(param.salary[1]);\r",
							"console.log(param.salary[2]);\r",
							"\r",
							"\r",
							"var salary_int = +param_pars[2].value;\r",
							"\r",
							"pm.test(\"conformity salary\", () => {\r",
							"    pm.expect(param.salary[0]).to.eql(salary_int);\r",
							"    pm.expect(+param.salary[1]).to.eql(salary_int*2);\r",
							"    pm.expect(+param.salary[2]).to.eql(salary_int*3);     \r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", param.name);\r",
							"pm.environment.set(\"age\", param.age);\r",
							"pm.environment.set(\"salary\", param.salary[0]);\r",
							"\r",
							"let i = 0;\r",
							"let n = param.salary.length;\r",
							"    while (i<n) {\r",
							"        console.log(param.salary[i]);\r",
							"        i++;\r",
							"    }\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=zheka&age=23&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "zheka"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "task_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"var param = pm.response.json();\r",
							"var param_pars = pm.request.body.formdata.toJSON();\r",
							"\r",
							"console.log(param, param_pars);\r",
							"pm.test(\"conformity test\", () => {\r",
							"    pm.expect(param).to.be.property('start_qa_salary');\r",
							"    pm.expect(param).to.be.property('qa_salary_after_6_months');\r",
							"    pm.expect(param).to.be.property('qa_salary_after_12_months');\r",
							"    pm.expect(param).to.be.property('qa_salary_after_1.5_year');\r",
							"    pm.expect(param).to.be.property('qa_salary_after_3.5_years');\r",
							"    pm.expect(param).to.be.property('person');\r",
							"});\r",
							"\r",
							"var zp_salary = +param_pars[2].value;\r",
							"pm.test('conformity data', ()=> {\r",
							"    pm.expect(param.start_qa_salary).to.eql(zp_salary);\r",
							"    pm.expect(param.qa_salary_after_6_months).to.eql(zp_salary*2);\r",
							"    pm.expect(param.qa_salary_after_12_months).to.eql(zp_salary*2.7);\r",
							"    pm.expect(param[\"qa_salary_after_1.5_year\"]).to.eql(zp_salary*3.3);\r",
							"    pm.expect(param[\"qa_salary_after_3.5_years\"]).to.eql(zp_salary*3.8);\r",
							"    pm.expect(param.person.u_name[1]).to.eql(zp_salary);\r",
							"    pm.expect(param.person.u_name[2]).to.eql(+param_pars[1].value);\r",
							"    pm.expect(param.person.u_salary_5_years).to.eql(zp_salary*4.2);\r",
							"});\r",
							"\r",
							"\r",
							" for(var i in param.person) {\r",
							"    console.log(i,param.person[i]);\r",
							"} \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}\n",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}